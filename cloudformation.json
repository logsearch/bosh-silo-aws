{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "bosh-silo",
  "Parameters": {
    "Name" : {
      "Type" : "String",
      "Description" : "A name for this silo",
      "Default" : "bosh-solo",
      "AllowedPattern" : "[0-9a-z\\-]+"
    },
    "AvailabilityZone" : {
      "Type" : "String",
      "Description" : "Availablity zone to deploy to",
      "Default" : "us-east-1a"
    },
    "KeyName" : {
      "Type" : "String",
      "Description" : "Key pair name for provisioning",
      "Default" : "default"
    },
    "KeyPath" : {
      "Type" : "String",
      "Description" : "Relative key path for provisioning",
      "Default" : "~/.ssh/id_rsa"
    },
    "KnownNetwork" : {
      "Type" : "String",
      "Description" : "Allow traffic from this network range",
      "Default" : "127.0.0.1/32"
    },
    "UbuntuHvmAmi" : {
      "Type" : "String",
      "Description" : "An Ubuntu HVM AMI from the region",
      "Default" : "ami-1234abcd"
    },
    "PeerVpcId" : {
      "Type" : "String",
      "Description" : "A VPC to peer with",
      "Default" : "vpc-1234abcd"
    },
    "PeerVpcNetwork" : {
      "Type" : "String",
      "Description" : "Peering VPC's network",
      "Default" : "10.0.0.0/20"
    }
  },
  "Resources": {
    "Vpc" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : "192.168.170.0/24",
        "Tags" : [
          {
            "Key" : "Name",
            "Value" : { "Ref" : "Name" }
          }
        ]
      }
    },

    "RemoteVpcPeering": {
        "Type": "AWS::EC2::VPCPeeringConnection",
        "Properties": {
            "VpcId": { "Ref" : "Vpc" },
            "PeerVpcId": { "Ref" : "PeerVpcId" }
        }
    },

    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [
          {
            "Key" : "Name",
            "Value" : { "Ref" : "Name" }
          }
        ]
      }
    },
    "InternetGatewayAttach" : {
      "Type" : "AWS::EC2::VPCGatewayAttachment",
      "Properties" : {
        "InternetGatewayId" : { "Ref" : "InternetGateway" },
        "VpcId" : { "Ref" : "Vpc" }
      }
    },

    "SecuritygroupGlobalKnownNetwork" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Allow all traffic from the known network",
        "VpcId" : { "Ref" : "Vpc" },
        "SecurityGroupIngress" : [
          {
            "IpProtocol" : "-1",
            "FromPort" : "-1",
            "ToPort" : "-1",
            "CidrIp" : { "Ref" : "KnownNetwork" }
          },
          {
            "IpProtocol" : "-1",
            "FromPort" : "-1",
            "ToPort" : "-1",
            "CidrIp" : { "Ref" : "PeerVpcNetwork" }
          }
        ],
        "Tags" : [
          {
            "Key" : "Name",
            "Value" : { "Fn::Join" : [ "/", [ { "Ref" : "Name" }, "/known-all" ] ] }
          }
        ]
      }
    },

    "SecuritygroupGlobalLocalAll" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Allow all traffic from the local and peered network",
        "SecurityGroupIngress" : [
          {
            "IpProtocol" : "-1",
            "FromPort" : "-1",
            "ToPort" : "-1",
            "CidrIp" : "192.168.170.0/24"
          }
        ],
        "Tags" : [
          {
            "Key" : "Name",
            "Value" : { "Fn::Join" : [ "/", [ { "Ref" : "Name" }, "/local-all" ] ] }
          }
        ],
        "VpcId" : { "Ref" : "Vpc" }
      }
    },

    "PublicSubnet" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "AvailabilityZone" : { "Ref" : "AvailabilityZone" },
        "CidrBlock" : "192.168.170.0/26",
        "Tags" : [
          {
            "Key" : "Name",
            "Value" : { "Fn::Join" : [ "/", [ { "Ref" : "Name" }, "/public" ] ] }
          }
        ],
        "VpcId" : { "Ref" : "Vpc" }
      }
    },

    "PublicSubnetRoutetable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "Tags" : [
          {
            "Key" : "Name",
            "Value" : { "Fn::Join" : [ "/", [ { "Ref" : "Name" }, "/public" ] ] }
          }
        ],
        "VpcId" : { "Ref" : "Vpc" }
      }
    },
    "PublicSubnetRoutetableRoute0" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicSubnetRoutetable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },
    "PublicSubnetRoutetableRoute1" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "DestinationCidrBlock": { "Ref" : "PeerVpcNetwork" },
        "RouteTableId" : { "Ref" : "PublicSubnetRoutetable" },
        "VpcPeeringConnectionId" : { "Ref" : "RemoteVpcPeering" }
      }
    },
    "PublicSubnetRoutetableAssoc" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicSubnetRoutetable" },
        "SubnetId" : { "Ref" : "PublicSubnet" }
      }
    },

    "PrivateSubnet" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "AvailabilityZone" : { "Ref" : "AvailabilityZone" },
        "CidrBlock" : "192.168.170.64/26",
        "Tags" : [
          {
            "Key" : "Name",
            "Value" : { "Fn::Join" : [ "/", [ { "Ref" : "Name" }, "/private" ] ] }
          }
        ],
        "VpcId" : { "Ref" : "Vpc" }
      }
    },

    "PrivateSubnetRoutetable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "Tags" : [
          {
            "Key" : "Name",
            "Value" : { "Fn::Join" : [ "/", [ { "Ref" : "Name" }, "/private" ] ] }
          }
        ],
        "VpcId" : { "Ref" : "Vpc" }
      }
    },
    "PrivateSubnetRoutetableRoute0" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateSubnetRoutetable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "InstanceId" : { "Ref" : "GatewayInstance" }
      }
    },
    "PrivateSubnetRoutetableRoute1" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "DestinationCidrBlock": { "Ref" : "PeerVpcNetwork" },
        "RouteTableId" : { "Ref" : "PrivateSubnetRoutetable" },
        "VpcPeeringConnectionId" : { "Ref" : "RemoteVpcPeering" }
      }
    },
    "PrivateSubnetRoutetableAssoc" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateSubnetRoutetable" },
        "SubnetId" : { "Ref" : "PrivateSubnet" }
      }
    },

    "InternalSubnet" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "AvailabilityZone" : { "Ref" : "AvailabilityZone" },
        "CidrBlock" : "192.168.170.128/25",
        "Tags" : [
          {
            "Key" : "Name",
            "Value" : { "Fn::Join" : [ "/", [ { "Ref" : "Name" }, "/internal" ] ] }
          }
        ],
        "VpcId" : { "Ref" : "Vpc" }
      }
    },

    "InternalSubnetRoutetable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "Tags" : [
          {
            "Key" : "Name",
            "Value" : { "Fn::Join" : [ "/", [ { "Ref" : "Name" }, "/internal" ] ] }
          }
        ],
        "VpcId" : { "Ref" : "Vpc" }
      }
    },
    "InternalSubnetRoutetableRoute0" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "DestinationCidrBlock": { "Ref" : "PeerVpcNetwork" },
        "RouteTableId" : { "Ref" : "InternalSubnetRoutetable" },
        "VpcPeeringConnectionId" : { "Ref" : "RemoteVpcPeering" }
      }
    },
    "InternalSubnetRoutetableAssoc" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "InternalSubnetRoutetable" },
        "SubnetId" : { "Ref" : "InternalSubnet" }
      }
    },

    "GatewayInstance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "AvailabilityZone" : { "Ref" : "AvailabilityZone" },
        "ImageId" : { "Ref" : "UbuntuHvmAmi" },
        "InstanceType" : "t2.micro",
        "KeyName" : { "Ref" : "KeyName" },
        "NetworkInterfaces" : [
          {
            "AssociatePublicIpAddress": "true",
            "DeviceIndex" : "0",
            "PrivateIpAddress" : "192.168.170.4",
            "GroupSet" : [
              { "Ref" : "SecuritygroupGlobalKnownNetwork" },
              { "Ref" : "SecuritygroupGlobalLocalAll" }
            ],
            "SubnetId" : { "Ref" : "PublicSubnet" }
          }
        ],
        "UserData" : {
          "Fn::Base64" : {
            "Fn::Join" : [
              "",
              [
                "#!/bin/bash", "\n",
                "set -e", "\n",
                "sudo sysctl -w net.ipv4.ip_forward=1 | sudo tee -a /etc/sysctl.conf", "\n",
                "sudo sysctl -w net.ipv4.conf.eth0.send_redirects=0 | sudo tee -a /etc/sysctl.conf", "\n",
                "sudo iptables -t nat -A POSTROUTING -s 192.168.170.0/24 -d 0/0 -j MASQUERADE -m comment --comment \"bosh-solo -> internet\"", "\n",
                "sudo service iptables save", "\n"
              ]
            ]
          }
        },
        "Tags" : [
          {
            "Key" : "Name",
            "Value" : { "Fn::Join" : [ "/", [ "bosh-silo/", { "Ref" : "Name" }, "/gateway2" ] ] }
          }
        ]
      }
    },
    "BoshUser" : {
      "Type" : "AWS::IAM::User",
      "Properties" : {
        "Path" : "/",
        "Policies" : [
          {
            "PolicyName" : "default",
            "PolicyDocument" : {
              "Version": "2012-10-17",
              "Statement" : [
                {
                  "Action" : [
                    "ec2:AssociateAddress",
                    "ec2:AttachVolume",
                    "ec2:CreateSnapshot",
                    "ec2:CreateTags",
                    "ec2:CreateVolume",
                    "ec2:DeleteSnapshot",
                    "ec2:DeleteVolume",
                    "ec2:DescribeAddresses",
                    "ec2:DescribeImages",
                    "ec2:DescribeInstances",
                    "ec2:DescribeSecurityGroups",
                    "ec2:DescribeSnapshots",
                    "ec2:DescribeSubnets",
                    "ec2:DescribeRegions",
                    "ec2:DescribeVolumes",
                    "ec2:DetachVolume",
                    "ec2:DisassociateAddress",
                    "ec2:RebootInstances",
                    "ec2:RunInstances",
                    "ec2:TerminateInstances"
                  ],
                  "Effect" : "Allow",
                  "Resource" : "*"
                },
                {
                  "Effect" : "Allow",
                  "Action" : [
                    "elasticloadbalancing:DescribeLoadBalancers",
                    "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                    "elasticloadbalancing:RegisterInstancesWithLoadBalancer"
                  ],
                  "Resource" : "*"
                }
              ]
            }
          }
        ]
      }
    }
  },
  "Outputs" : {
    "GatewayPublicIp" : {
      "Value" : { "Fn::GetAtt" : [ "GatewayInstance", "PublicIp" ] }
    }
  }
}
